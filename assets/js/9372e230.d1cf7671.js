"use strict";(self.webpackChunksia_doc=self.webpackChunksia_doc||[]).push([[3278],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=l,f=d["".concat(i,".").concat(m)]||d[m]||p[m]||r;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:l,o[1]=s;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},72770:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var a=n(87462),l=n(63366),r=(n(67294),n(3905)),o=["components"],s={hide_title:!0},i=void 0,u={unversionedId:"Formation PBI/801300/Format_Dax_DA-Fonctions-de-table",id:"Formation PBI/801300/Format_Dax_DA-Fonctions-de-table",title:"Format_Dax_DA-Fonctions-de-table",description:"Introduction aux fonctions de table",source:"@site/docs/80-Formation PBI/801300/801300_Format_Dax_DA-Fonctions-de-table.md",sourceDirName:"80-Formation PBI/801300",slug:"/Formation PBI/801300/Format_Dax_DA-Fonctions-de-table",permalink:"/docs/Formation PBI/801300/Format_Dax_DA-Fonctions-de-table",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/80-Formation PBI/801300/801300_Format_Dax_DA-Fonctions-de-table.md",tags:[],version:"current",sidebarPosition:801300,frontMatter:{hide_title:!0},sidebar:"tutorialSidebar",previous:{title:"Format_Dax_DA-Fonction-CALCULATE",permalink:"/docs/Formation PBI/801300/Format_Dax_DA-Fonction-CALCULATE"},next:{title:"Format_Dax_DA-Introduction-Langage-DAX",permalink:"/docs/Formation PBI/801300/Format_Dax_DA-Introduction-Langage-DAX"}},c={},p=[{value:"Introduction aux fonctions de table",id:"introduction-aux-fonctions-de-table",level:2},{value:"Filtrage d&#39;une table",id:"filtrage-dune-table",level:2},{value:"Ignorer les filtres",id:"ignorer-les-filtres",level:2},{value:"Combiner les filtres",id:"combiner-les-filtres",level:2},{value:"Distinct",id:"distinct",level:2},{value:"Combien de valeurs pour une colonne",id:"combien-de-valeurs-pour-une-colonne",level:2},{value:"ALLSELECTED",id:"allselected",level:2},{value:"RELATEDTABLE",id:"relatedtable",level:2},{value:"Tables et relations",id:"tables-et-relations",level:2},{value:"Tables avec une ligne et une colonne",id:"tables-avec-une-ligne-et-une-colonne",level:2}],d={toc:p};function m(e){var t=e.components,s=(0,l.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"les-fonctions-de-table-dax"},"Les fonctions de table DAX"),(0,r.kt)("h2",{id:"introduction-aux-fonctions-de-table"},"Introduction aux fonctions de table"),(0,r.kt)("p",null,"Les fonctions de table sont des fonctions DAX qui sert \xe0 manipuler et contr\xf4ler les tables.\nLes fonctions les plus importantes sont ",(0,r.kt)("strong",{parentName:"p"},"FILTER , ALL , VALUE , DISTINCT , RELATEDTABLE.")),(0,r.kt)("h2",{id:"filtrage-dune-table"},"Filtrage d'une table"),(0,r.kt)("p",null,"La fonction ",(0,r.kt)("strong",{parentName:"p"},"FILTER")," est une fonction qui filtre une table et elle a deux arguments, le premier une expression de table , le deuxi\xe8me est une expression qui sera ex\xe9cut\xe9 pour chaque ligne de cette table.\nCommen\xe7ons par le code suivant, la fonction SUMX() \xe9value le premier argument qui est FILTER , FILTER re\xe7oit un nombre de lignes et \xe9value la condition Orders","[Price]"," > 1 , donc seulement les lignes satisfaites \xe0 la condition de filtre seront retourn\xe9es par FILTER.\nEnsuite l'it\xe9ration de la fonction SUMX() se fait sur les lignes obtenues par FILTER, alors pour chaque ligne on calcule la quantit\xe9 fois le prix  ."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SUMX(\n    FILTER (\n            Orders,\n            Orders[Price] > 1\n    ),\n    Orders [Quantity] * Orders [Price]\n)\n")),(0,r.kt)("p",null,"Le comportement de la fonction FILTER produit techniquement un plus petit nombre de lignes en r\xe9sultat et ces derniers doivent se faire it\xe9rer par une fonction 'X' ,comme le cas de SUMX() qui it\xe8re ligne par ligne toute la table retourn\xe9e par le filtre."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"La fonction ",(0,r.kt)("strong",{parentName:"p"},"FILTER")," obtient une table et renvoie une table en enlevant quelques rang\xe9es de la table initiale qu'elle a re\xe7ue.")),(0,r.kt)("h2",{id:"ignorer-les-filtres"},"Ignorer les filtres"),(0,r.kt)("p",null,"La fonction ALL renvoie tout le contenu d'une table, en ignorant les filtres qui existent sur cette table.\nDans l'exemple suivant, nous utiliserons ALL comme argument de SUMX(), SUMX() va recevoir le r\xe9sultat de ALL et pour chaque rang\xe9e elle va \xe9valuer la quantit\xe9 multipli\xe9e par le prix et enfin r\xe9sumer les r\xe9sultats. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SUMX (\n    ALL( Orders ),      \n    Orders [Quantity] * Orders [Price]\n)\n")),(0,r.kt)("p",null,"Une fois qu'on applique cette mesure dans notre rapport , on obtiendra des valeurs identiques pour toutes les lignes sur le tableau "),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"DA-Fonctions-de-table-1",src:n(32862).Z,width:"398",height:"198"})),(0,r.kt)("p",null,"On peut servir de cette mesure en cr\xe9ant une mesure Pourcentage comme :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"PCT = DIVIDE ( [Sales Amount], [ ALL Sales],0)\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"DA-Fonctions-de-table-2",src:n(15433).Z,width:"501",height:"213"})),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"ALL")," a aussi une syntaxe avec une seule colonne ou plus comme:\n",(0,r.kt)("strong",{parentName:"p"},"ALL(Customers ","[CusotmersName]",")")," retourne une table calcul\xe9 qui n'a qu'une seule colonne et cette colonne contient que les valeurs uniques de la colonne CustomersName.")),(0,r.kt)("p",null,"Il existe aussi la fonction ",(0,r.kt)("strong",{parentName:"p"},"ALLEXCEPT"),", c'est une fonction particuli\xe8re, comme le cas o\xf9 vous avez besoin d'\xe9crire ",(0,r.kt)("strong",{parentName:"p"},"ALL")," avec toutes les colonnes d'une table en excluant une ou deux colonnes,vous pouvez \xe0 la place \xe9crire ",(0,r.kt)("strong",{parentName:"p"},"ALLEXCEPT")," avec le champs \xe0 exclure:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"DA-Fonctions-de-table-3",src:n(2232).Z,width:"420",height:"214"})),(0,r.kt)("h2",{id:"combiner-les-filtres"},"Combiner les filtres"),(0,r.kt)("p",null,"Commen\xe7ons par le code suivant qui combine 3 fonctions ",(0,r.kt)("strong",{parentName:"p"},"SUMX(), ALL , FILTER")," :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SUMX(\n    FILTER (\n            ALL ( Orders) ,\n            Orders[Price] > 1\n    ),\n    Orders [Quantity] * Orders [Price]\n)\n")),(0,r.kt)("p",null,"Donc l'ex\xe9cution de cette mesure \xe9value SUMX(), et SUMX() tente d'\xe9valuer le premier argument ",(0,r.kt)("strong",{parentName:"p"},"FILTER"),", et la fonction ",(0,r.kt)("strong",{parentName:"p"},"FILTER")," doit \xe9valuer ",(0,r.kt)("em",{parentName:"p"},"ALL (Orders)")," .\nMaintenant la premi\xe8re fonction de cette expression qui est \xe9valu\xe9e et bien la fonction ",(0,r.kt)("strong",{parentName:"p"},"ALL"),", ",(0,r.kt)("strong",{parentName:"p"},"ALL")," re\xe7oit les lignes de la table ",(0,r.kt)("em",{parentName:"p"},"Orders")," et elle va ignorer le filtre comme on a d\xe9j\xe0 vu ",(0,r.kt)("strong",{parentName:"p"},"ALL")," ignore tout filtre appliqu\xe9 sur la table ,le r\xe9sultat de la fonction ",(0,r.kt)("strong",{parentName:"p"},"ALL")," dans ce cas est la table enti\xe8re ",(0,r.kt)("em",{parentName:"p"},"Orders"),".\nLe comportement de filtre est d'appliquer la condition ",(0,r.kt)("em",{parentName:"p"},"Orders","[Price]"," > 1")," sur les lignes de la table, le r\xe9sultat du filtre est juste les lignes qui respectent cette condition.\nEn dernier, la fonction ",(0,r.kt)("strong",{parentName:"p"},"SUMX()")," va it\xe9rer les lignes qui acceptait la condition du filtre est \xe9valuer la quantit\xe9 multipli\xe9e par le prix  pour chaque rang\xe9e."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Nous pouvons utiliser diff\xe9rentes fonctions de table et les combiner comme vous l'Avez vous pour ",(0,r.kt)("strong",{parentName:"p"},"FILTER")," et ",(0,r.kt)("strong",{parentName:"p"},"ALL"),".")),(0,r.kt)("h2",{id:"distinct"},"Distinct"),(0,r.kt)("p",null,"La fonction DISTINCT renvoie les valeurs uniques d'une table, et elle respecte l'application des filtres existants dans un rapport."),(0,r.kt)("p",null,"L'exemple ci dessous va nous retourner le nombre de lignes des valeurs uniques du code de produit :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"NumOfProducts = \n                COUNTROWS (\n                            DISTINCT( Product [ ProductCode ])\n                )\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Nous avons aussi la fonction ",(0,r.kt)("strong",{parentName:"p"},"DISTINCTCOUNT")," pour calculer le nombre distincte de lignes . ")),(0,r.kt)("h2",{id:"combien-de-valeurs-pour-une-colonne"},"Combien de valeurs pour une colonne"),(0,r.kt)("p",null,"Pour commencer, on pose la question qu'est-ce qu'il arrive lorsqu'on a une relation entre deux tables dans un mod\xe8le  ,et le nombre de lignes que nous avons dans une table n'est pas conforme avec l'autre table ? comme l'exemple ci dessous :"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"DA-Fonctions-de-table-4",src:n(49420).Z,width:"506",height:"217"})),(0,r.kt)("p",null,"Alors d\xe8s qu'on a comme cet exemple, la pr\xe9sence du relation va g\xe9n\xe9rer un comportement qui va identifier que quelques lignes on une correspondance mais autres ne l'ont pas:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"DA-Fonctions-de-table-5",src:n(32301).Z,width:"514",height:"237"})),(0,r.kt)("p",null,"Une fois que les deux lignes avec ProductId 4 et 5 n'ont pas de correspondance avec la table Produit, une ligne BLANK va se rajouter dans la table Produit pour faire une liaison avec eux comme \xe9tant des PorductId BLANK et Product BLANK:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"DA-Fonctions-de-table-6",src:n(17466).Z,width:"550",height:"219"})),(0,r.kt)("p",null,"Cette ligne BLANK peut \xeatre calculer et peut ne pas \xeatre calculer par des fonctions de r\xe9f\xe9rence ou de table , comme les cas suivantes:\nVoil\xe0 4 diff\xe9rents calcules"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"Count of Product = **COUNTROWS** ( 'Products' )\n\nCountRowALL = **COUNTROWS** ( **ALL** ( Product [ Product]))\n\nCountRowsDistinct = **COUNTROWS** ( **DISTINCT**( Product [ Product]))\n\nCountRowsValues = **COUNTROWS** ( **Values** ( Product [ Product]))\n")),(0,r.kt)("p",null,"Ces expressions nous donne comme r\xe9sultat par produit :"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"DA-Fonctions-de-table-7",src:n(30974).Z,width:"827",height:"223"})),(0,r.kt)("p",null,"Dans le cas de la fonction COUNTROWS seule et DISTINCT , le champs vide n'est pas calcul\xe9, par contre dans les autres expressions il se consid\xe8re comme existant."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Si on choisit de ne jamais calculer les lignes vides (",(0,r.kt)("strong",{parentName:"p"},"BLANK"),"), on peut utiliser la fonction ",(0,r.kt)("strong",{parentName:"p"},"ALLNOBLANKROW")," , cette derni\xe8re se comporte comme la fonction ",(0,r.kt)("strong",{parentName:"p"},"ALL")," mais en \xe9liminant les lignes vides.")),(0,r.kt)("h2",{id:"allselected"},"ALLSELECTED"),(0,r.kt)("p",null,"La fonction ALLSELECTED est une fonction similaire \xe0 la fonction ALL , mais avec un comportement particulier qui s'impacte avec les filtres qui se trouvent dans le rapport :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SUMX(\n            ALLSELECTED ( Orders) ,\n            Orders [Quantity] * Orders [Price]\n)\n")),(0,r.kt)("p",null,"Prenons par exemple le cas suivant :"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"DA-Fonctions-de-table-8",src:n(93550).Z,width:"509",height:"157"})),(0,r.kt)("p",null,"Vous allez remarquer que la colonne ",(0,r.kt)("em",{parentName:"p"},"ALL Sales")," avec la fonction utilis\xe9e ",(0,r.kt)("strong",{parentName:"p"},"ALL")," n'a pas pris en compte le filtre malgr\xe9 qu'on a choisit comme Brand : ",(0,r.kt)("em",{parentName:"p"},"Adventure Works, Contoso, Fabrikam, Litware, Northwind Traders."),"\nPar contre, la colonne ",(0,r.kt)("em",{parentName:"p"},"ALLSELECTED Sales")," qui est faite \xe0 base de la fonction ",(0,r.kt)("strong",{parentName:"p"},"ALLSELECTED")," a pris en charge le filtre et a calcul\xe9 la somme ",(0,r.kt)("em",{parentName:"p"},"Sales Amount")," que des 5 brands s\xe9lectionn\xe9s ."),(0,r.kt)("h2",{id:"relatedtable"},"RELATEDTABLE"),(0,r.kt)("p",null,"RELATEDTABLE est une fonction qui est similaire \xe0 RELATED,mais elle commence du c\xf4t\xe9 de relation (1) vers c\xf4t\xe9 relation (*) et nous renvoie une table contenant toutes les lignes qui concernent l'\xe9l\xe9ment du c\xf4t\xe9 (1)."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"DA-Fonctions-de-table-9",src:n(24995).Z,width:"499",height:"316"})),(0,r.kt)("p",null,"Donc selon l'exemple au dessus, un client peut faire plusieurs ventes et une vente  va \xeatre faite qu'avec un seul client. En se basant sur ce mod\xe8le on peut calculer le montant de la transaction de ventes faites par un client , la mesure est la suivante:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SalesOfCurrentCustomer =\n            SUMX( \n                    RELATEDTABLE (Sales), \n                    Sales [ Quantity] * Sales [ Net Price]\n    ) \n")),(0,r.kt)("h2",{id:"tables-et-relations"},"Tables et relations"),(0,r.kt)("p",null,"Dans un mod\xe8le tabulaire, une relation physique relie deux tables via une \xe9quivalence sur une seule colonne.\nLes relations ont une cardinalit\xe9, dont il existe trois types. La diff\xe9rence entre eux est \xe0 la fois technique et s\xe9mantique.\nVoici les trois types de cardinalit\xe9 de relation disponibles :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Relations un-\xe0-plusieurs :")," il s'agit du type de cardinalit\xe9 de relation le plus courant. D'un c\xf4t\xe9 de la relation, la colonne doit avoir des valeurs uniques ; du c\xf4t\xe9 multiple, la valeur peut (et contient g\xe9n\xe9ralement) des doublons. Tout d\xe9pend de l'ordre des tables : une relation un-\xe0-plusieurs entre ",(0,r.kt)("em",{parentName:"li"},"Produit")," et ",(0,r.kt)("em",{parentName:"li"},"Ventes")," est identique \xe0 une relation plusieurs-\xe0-un entre ",(0,r.kt)("em",{parentName:"li"},"Ventes")," et ",(0,r.kt)("em",{parentName:"li"},"Produit")," ."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Relations un-\xe0-un :")," il s'agit d'un type de cardinalit\xe9 de relation plut\xf4t rare. Des deux c\xf4t\xe9s de la relation, les colonnes doivent avoir des valeurs uniques. Un nom plus pr\xe9cis serait une relation \xab z\xe9ro ou un \xbb \xe0 \xab z\xe9ro ou un \xbb, car la pr\xe9sence d'une ligne dans une table n'implique pas la pr\xe9sence d'une ligne correspondante dans l'autre table."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Relations plusieurs-\xe0-plusieurs :")," des deux c\xf4t\xe9s de la relation, les colonnes peuvent avoir des doublons. En effet, dans le langage courant de mod\xe9lisation de donn\xe9es, \xab plusieurs-\xe0-plusieurs \xbb fait r\xe9f\xe9rence \xe0 un autre type d'impl\xe9mentation, cr\xe9\xe9 en utilisant des paires de relations un-\xe0-plusieurs et plusieurs-\xe0-un. ")),(0,r.kt)("p",null,"Le code ci dessous contient un exemple de la fonction SUMX() avec une fonction de table complexe (1), et une fonction pour it\xe9ration sur chaque ligne du r\xe9sultat de la fonction table (2):"),(0,r.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"image manquante")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"![Table]","(s:/PowerBi-EODE_nePasEffacer/Formation Power BI/Mardown/PBI Formation/Formation Langage DAX - Avanc\xe9/Folder IMAGE/TABLE-RELATIONSHIPS.png)"))),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Comme vous voyez dans le code, la fonction ",(0,r.kt)("strong",{parentName:"p"},"SUMX()")," ex\xe9cute la fonction FILTER, qui de son niveau \xe9value la cat\xe9gorie du produit et fait un calcul de nombre de produit pour chaque cat\xe9gorie, apr\xe8s vous avez ",(0,r.kt)("strong",{parentName:"p"},"FILTER")," qui renvoie uniquement les lignes que leurs cat\xe9gories ont au moins 10 produits. Dans ce cas ",(0,r.kt)("strong",{parentName:"p"},"RELATEDTABLE")," pour chauqe cat\xe9gorie r\xe9cup\xe8re la liste des produits et ",(0,r.kt)("strong",{parentName:"p"},"COUNTROWS")," les compte."),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"La fonction ",(0,r.kt)("strong",{parentName:"p"},"RELATEDTABLE")," utilise la relation entre table Cat\xe9gorie et table Produit afin de r\xe9cup\xe9rer les produits appartenant \xe0 une cat\xe9gorie."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"L'objectif de de la deuxi\xe8me fonctions SUMX() est de calculer le montant des ventes pour les cat\xe9gories qui ont respect\xe9es la condition de filtre et d'obtenir plus de 10 produits par cat\xe9gorie."))),(0,r.kt)("h2",{id:"tables-avec-une-ligne-et-une-colonne"},"Tables avec une ligne et une colonne"),(0,r.kt)("p",null,"DAX utilise la fonction ",(0,r.kt)("strong",{parentName:"p"},"HASONEVALUE")," qui r\xe9cup\xe8re les valeurs d'une colonne et il retourne TRUE si cette liste des valeurs n'a qu'une seule ligne, et ce sc\xe9nario existe quand on a par exemple un Slicer et on s\xe9lectionne une seule valeur dans ce slicer , la valeur de ",(0,r.kt)("strong",{parentName:"p"},"HASONEVALUE")," dans se cas sera ",(0,r.kt)("em",{parentName:"p"},"TRUE"),"."),(0,r.kt)("p",null,"On prend cette exemple de slicer ",(0,r.kt)("em",{parentName:"p"},"UnitsOfMeasure")," (1000 selectionn\xe9) et on utilisera le code qui le suit :"),(0,r.kt)("blockquote",null,(0,r.kt)("ul",{parentName:"blockquote",className:"contains-task-list"},(0,r.kt)("li",{parentName:"ul",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","1"),(0,r.kt)("li",{parentName:"ul",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","1000"),(0,r.kt)("li",{parentName:"ul",className:"task-list-item"},(0,r.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","10000"))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"DA-Fonctions-de-table-10",src:n(28007).Z,width:"597",height:"187"})),(0,r.kt)("p",null,"Le r\xe9sultat de la mesure ",(0,r.kt)("strong",{parentName:"p"},"Selection")," dans l'affichage sera 1000, parce que la fonction ",(0,r.kt)("strong",{parentName:"p"},"HASONEVALUE")," va retourner ",(0,r.kt)("strong",{parentName:"p"},"TRUE")," et l'affichage ",(0,r.kt)("strong",{parentName:"p"},"VALUES")," sera la valeur 1000."),(0,r.kt)("p",null,"IL existe d'autre fonction utile pour v\xe9rifier s'il y'a une ligne s\xe9lectionn\xe9e dans une expression de table, parmi ces fonctions il y'a la fonction ",(0,r.kt)("strong",{parentName:"p"},"ISEMPTY")," , elle v\xe9rifie si une table est vide et si le cas elle retourne ",(0,r.kt)("strong",{parentName:"p"},"TRUE"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"DA-Fonctions-de-table-11",src:n(6393).Z,width:"501",height:"135"})))}m.isMDXComponent=!0},32862:function(e,t,n){t.Z=n.p+"assets/images/DA-Fonctions-de-table-1-151e59c560f8159bf1eda02ef808f96c.png"},28007:function(e,t,n){t.Z=n.p+"assets/images/DA-Fonctions-de-table-10-81ffb3910b413265b682a911378b0d1f.png"},6393:function(e,t,n){t.Z=n.p+"assets/images/DA-Fonctions-de-table-11-8ba795c3211fc16a451cf9f60200eb4e.png"},15433:function(e,t,n){t.Z=n.p+"assets/images/DA-Fonctions-de-table-2-3d631b2fe87ce359b26af0c5f4e547ec.png"},2232:function(e,t,n){t.Z=n.p+"assets/images/DA-Fonctions-de-table-3-909e1e0303401df0af8f7425cfb26546.png"},49420:function(e,t,n){t.Z=n.p+"assets/images/DA-Fonctions-de-table-4-df2d35fa5a3422d41172b3a83107a3a5.png"},32301:function(e,t,n){t.Z=n.p+"assets/images/DA-Fonctions-de-table-5-89d00a1d3a474125390a8520afef5159.png"},17466:function(e,t,n){t.Z=n.p+"assets/images/DA-Fonctions-de-table-6-95831ea3892f1b8ddb2fbf0731839250.png"},30974:function(e,t,n){t.Z=n.p+"assets/images/DA-Fonctions-de-table-7-d077371a186adcd9e6a35fd2e5d5d836.png"},93550:function(e,t,n){t.Z=n.p+"assets/images/DA-Fonctions-de-table-8-872ac6e21a3f15cab36e8cfe5e0cd5b3.png"},24995:function(e,t,n){t.Z=n.p+"assets/images/DA-Fonctions-de-table-9-f2675b96c5aec6bdf083b025197aeef9.png"}}]);