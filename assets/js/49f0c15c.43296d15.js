"use strict";(self.webpackChunksia_doc=self.webpackChunksia_doc||[]).push([[496],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var u=a.createContext({}),i=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=i(e.components);return a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=i(n),m=l,g=d["".concat(u,".").concat(m)]||d[m]||p[m]||r;return n?a.createElement(g,s(s({ref:t},c),{},{components:n})):a.createElement(g,s({ref:t},c))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,s=new Array(r);s[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:l,s[1]=o;for(var i=2;i<r;i++)s[i]=n[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},74687:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return p}});var a=n(87462),l=n(63366),r=(n(67294),n(3905)),s=["components"],o={},u=void 0,i={unversionedId:"Formation PBI/801300/Format_Dax_Formation-Langage-DAX",id:"Formation PBI/801300/Format_Dax_Formation-Langage-DAX",title:"Format_Dax_Formation-Langage-DAX",description:"---",source:"@site/docs/80-Formation PBI/801300/801300_Format_Dax_Formation-Langage-DAX.md",sourceDirName:"80-Formation PBI/801300",slug:"/Formation PBI/801300/Format_Dax_Formation-Langage-DAX",permalink:"/docs/Formation PBI/801300/Format_Dax_Formation-Langage-DAX",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/80-Formation PBI/801300/801300_Format_Dax_Formation-Langage-DAX.md",tags:[],version:"current",sidebarPosition:801300,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Format_Dax_Dax avanc\xe9",permalink:"/docs/Formation PBI/801300/Format_Dax_Dax avanc\xe9"},next:{title:"Format_Dax_Optimistation-DAX",permalink:"/docs/Formation PBI/801300/Format_Dax_Optimistation-DAX"}},c={},p=[{value:"Introduction DAX",id:"introduction-dax",level:2},{value:"C\u2019est quoi DAX ?",id:"cest-quoi-dax-",level:3},{value:"Colonne Calcul\xe9e",id:"colonne-calcul\xe9e",level:3},{value:"Mesures",id:"mesures",level:3},{value:"Fonctions d&#39;agr\xe9gation",id:"fonctions-dagr\xe9gation",level:3},{value:"Utilisation des variables",id:"utilisation-des-variables",level:3},{value:"Fonctions de Date",id:"fonctions-de-date",level:3},{value:"Les fonctions de Table",id:"les-fonctions-de-table",level:2},{value:"Filtrer une table",id:"filtrer-une-table",level:3},{value:"Suppression des filtres",id:"suppression-des-filtres",level:3},{value:"M\xe9lange des Filtres",id:"m\xe9lange-des-filtres",level:3},{value:"Fonction DISTINCT",id:"fonction-distinct",level:3},{value:"Fonction RELATEDTABLE",id:"fonction-relatedtable",level:3},{value:"CALCULATE",id:"calculate",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,l.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"formation-langage-dax"},"Formation Langage DAX"),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"introduction-dax"},"Introduction DAX"),(0,r.kt)("p",null,"Dans cette introduction nous fournissons les bases du langage DAX : la syntaxe de base, les concepts de colonnes et de mesures calcul\xe9es et l'utilisation des variables."),(0,r.kt)("h3",{id:"cest-quoi-dax-"},"C\u2019est quoi DAX ?"),(0,r.kt)("p",null,"Le langage DAX (Data Analysis Expression) est un langage d\u2019analyse de donn\xe9es tr\xe8s puissant. Il est utilis\xe9 par Power Pivot dans Excel, Power BI Desktop et SSAS (SQL Sever Analysis Services) tabulaire. Il s\u2019agit d\u2019un langage inspir\xe9 en partie des fonctions Excel mais adapt\xe9 \xe0 la r\xe9alit\xe9 d\u2019analyse de bases de donn\xe9es. Il permet notamment la cr\xe9ation d\u2019indicateurs sur mesure r\xe9pondant aux probl\xe9matiques des utilisateurs m\xe9tiers."),(0,r.kt)("h3",{id:"colonne-calcul\xe9e"},"Colonne Calcul\xe9e"),(0,r.kt)("p",null,"Pour apprendre le langage, la premi\xe8re chose \xe0 apprendre et de savoir cr\xe9er une colonne calcul\xe9e."),(0,r.kt)("p",null,"Une colonne calcul\xe9e est fondamentalement un calcul que vous faites \xe0 l'int\xe9rieur de votre table, afin d'enrichir votre mod\xe8le de donn\xe9es."),(0,r.kt)("p",null,"Exemple: Montant des ventes,il est calcul\xe9 par le co\xfbt unitaire des ventes multipli\xe9 par la quantit\xe9 vendue:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Line Amount= Sales","[UnitPrice]","*Sales","[Quantity]")),(0,r.kt)("p",null,"une fois vous appuyez sur ",(0,r.kt)("strong",{parentName:"p"},"Entr\xe9e")," le moteur calculera la valeur de l'expression pour chaque ligne de votre table et ajoutera le r\xe9sultat \xe0 la fin."),(0,r.kt)("p",null,"Exemple : Calculer l'\xe2ge d'un client avec une simple \xe9quation, on prend l'ann\xe9e' d'aujourd'hui moins l'ann\xe9e de la date de naissance du client."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\xc2ge= YEAR(TODAY()) - YEAR(Customer","[Birth date]",")")),(0,r.kt)("p",null,"Une fois vous appuyez sur Entr\xe9e vous aurez une colonne \xc2ge qui est ajout\xe9e \xe0 la fin de votre table et \xe0 chaque actualisation des donn\xe9es, le contenu sera recalcul\xe9 en stockant dans la table des clients la colonne \xe2ge de client."),(0,r.kt)("h3",{id:"mesures"},"Mesures"),(0,r.kt)("p",null,"Il y'a une diff\xe9rence entre colonnes calcul\xe9es et les mesures, une colonne calcul\xe9e est calcul\xe9e rang\xe9e par rang\xe9e et stock\xe9e dans le mod\xe8le. Les mesures en revanche sont calcul\xe9es au moment de la requ\xeate, elles agr\xe8gent les valeurs et ensuite elles calculent le r\xe9sultat."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"Colonne Calcul\xe9e : Line Margin = Sales[Quantity]  * (Sales[Net Price] - Sales[Unit Cost])\n\nColonne Calcul\xe9e : Line Margin%= Sales[Line Margin] / Sales [Line Amount]\n\nMesure : Sales Amount = SUM(Sales[Line Amount])\n\nMesure : Margin % = SUM(Sales[Line Margin]) / SUM(Sales[Line Amount])\n")),(0,r.kt)("p",null,"Ici la mesure Margin% va faire agr\xe9gation de Line Marin divis\xe9e sur agr\xe9gation de Line Amount."),(0,r.kt)("p",null,"En termes de Processeur et d'espace,les colonnes calcul\xe9es utilisent de l'espace \xe0 la fois sur le disque et la RAM  alors que les mesures utilisent uniquement le processeur, donc pour les bonnes pratiques on \xe9vite les colonnes calcul\xe9es et on essaie de tout calculer en utilisant des mesures."),(0,r.kt)("h3",{id:"fonctions-dagr\xe9gation"},"Fonctions d'agr\xe9gation"),(0,r.kt)("p",null,"Les fonctions d'agr\xe9gation sont utiles \xe0 chaque fois que vous souhaitez agr\xe9ger des valeurs. Les fonctions les plus couramment utili\xe9es sont ",(0,r.kt)("strong",{parentName:"p"},"SUM")," (Somme), ",(0,r.kt)("strong",{parentName:"p"},"AVERAGE"),"(Moyenne), ",(0,r.kt)("strong",{parentName:"p"},"MIN")," (Minimum), ",(0,r.kt)("strong",{parentName:"p"},"MAX")," (Maximum)"),(0,r.kt)("p",null,"Exemple : ",(0,r.kt)("strong",{parentName:"p"},"Sales Amount = SUM(Sales","[Line Amount]",")")),(0,r.kt)("p",null,"Les fonctions d'agr\xe9gation ont deux limitations, la premi\xe8re c'est qu'elles fonctionnent que sur les chiffres et la deuxi\xe8me c'est qu'elles prennent une seule valeur (une seule colonne \xe0 calculer)."),(0,r.kt)("p",null,"Pour cette raison , il existe des fonctions d'agr\xe9gations 'X' qui sont ",(0,r.kt)("strong",{parentName:"p"},"SUM X(),AVERAGE X(),MIN X(),MAX X()....")," qui s'appellent aussi des it\xe9rateurs."),(0,r.kt)("p",null,"La nature de ces it\xe9rateurs,au lieu de calculer uniquement un agr\xe9gat,la fonction va scanner une table et it\xe9rer ligne par ligne et calculer l'expression pour chaque ligne,par exemple: "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"SUMX ( Sales, Sales ","[Price ]"," * Sales ","[Quantity]"," )")),(0,r.kt)("p",null,"Nous fournissons comme premi\xe8re param\xe8tre la table et le deuxi\xe8me param\xe8tre l'expression qui peut calculer les valeurs ligne par ligne de la table Sales."),(0,r.kt)("h3",{id:"utilisation-des-variables"},"Utilisation des variables"),(0,r.kt)("p",null,"Les variables sont extr\xeamement utiles car ils vous permettent de gagner du temps et \xe9crivez un code plus propre et facile \xe0 comprendre."),(0,r.kt)("p",null,"Une variable est toujours pr\xe9c\xe9d\xe9e par la syntaxe ",(0,r.kt)("strong",{parentName:"p"},"VAR"),", par exemple:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"VAR \n    TotalQuantity= SUM( Sales [Quantity] )\nRETURN\n    IF (\n        TotalQuantity > 1000 ,\n        TotalQuantity * 0,95 ,\n        TotalQuantity * 1,25\n)\n")),(0,r.kt)("p",null,"Dans cet exemple la variable TotalQuantity calcule la somme de la quantit\xe9 vendue et dans la partie retour , vous calculez si la quantit\xe9 totale est sup\xe9rieur \xe0 1000 alors vous faites la quantit\xe9 totale multipli\xe9 par 0,95 sinon vous la multipliez \xe0 1,25."),(0,r.kt)("h3",{id:"fonctions-de-date"},"Fonctions de Date"),(0,r.kt)("p",null,"Il existe un ensemble tr\xe8s riche de fonctions de date qui sont DATE,DATEVALUE,DAY,EDATE,EOMONTH,HOUR,MINUTE,MONTH,YEAR,NOW,SECOND,TIME,TIMEVALUE,TODAY,WEEKDAY,WEEKNUM,YEARFRAC..."),(0,r.kt)("p",null,"Toutes ces fonctions date travaillent avec une DATE et retourne une date ou un num\xe9ro."),(0,r.kt)("h2",{id:"les-fonctions-de-table"},"Les fonctions de Table"),(0,r.kt)("p",null,"Parmi les nombreuses fonctions disponibles dans DAX, les fonctions de table jouent un r\xf4le tr\xe8s important. Dans cette section, nous d\xe9taillons les plus fr\xe9quemment utilis\xe9s \xe0 travers quelques exemples."),(0,r.kt)("p",null,"Les fonctions de table sont juste des fonctions qui fait que leur r\xe9sultat retourne une table compl\xe8te."),(0,r.kt)("p",null,"Les plus utilis\xe9es sont DICTINCT, FILTER,VALUES,ALL et RELATEDTABLE, en r\xe8gle g\xe9n\xe9rale vous n'utilisez pas les fonctions de table afin de calculer une table vous utilisez g\xe9n\xe9ralement leur r\xe9sultat et vous les parcourez pour calculer d'autres valeurs."),(0,r.kt)("h3",{id:"filtrer-une-table"},"Filtrer une table"),(0,r.kt)("p",null,"FILTER est utilis\xe9 pour filtrer une table. Donc vous \xe9crivez FILTER,puis sp\xe9cifiez un nom de table,puis une condition."),(0,r.kt)("p",null,"Exemple Copie de table Product avec filtre sur la couleur RED du produit:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Copy Of Product = FILTER ('Product' , 'Product'","[Color]"," = ''Red'' )")),(0,r.kt)("p",null,"Exemple de la mesure ",(0,r.kt)("strong",{parentName:"p"},"Red Sales")," \xe9gale la somme des produits avec couleur RED, et puisque Product Color ne se trouve pas sur la m\xeame table Sales on ajoutera la fonction ",(0,r.kt)("strong",{parentName:"p"},"Related")," pour donner acc\xe8s aux colonnes qui sont dans une table qui est en relation avec la table en cours (Sales)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"Red Sales = \n\nSUMX ( \n\n                FILTER (\n\n                    Sales , \n\n                    Related ( 'Product' [Color]) = ''Red''\n\n                        ) , \n\n                Sales [Quantity] * Sales [Net Price]\n\n            )\n")),(0,r.kt)("h3",{id:"suppression-des-filtres"},"Suppression des filtres"),(0,r.kt)("p",null,"Si vous souhaitez agrandir l'ensemble sur lequel vous devez travaillez,c'est g\xe9n\xe9ralement le cas quand vous voulez calculer un pourcentage,des ratios, dans ce cas la fonction ",(0,r.kt)("strong",{parentName:"p"},"ALL")," est tr\xe8s utile , elle sert \xe0 renvoyer la totalit\xe9 de la table que vous avez pass\xe9 en param\xe8tre, et cela peut fonctionner sur une table ou sur une colonne."),(0,r.kt)("p",null,"Dans cette exemple de mesure ",(0,r.kt)("strong",{parentName:"p"},"ALL Sales Amount"),", vous n'allez pas l'afficher parce qu'il ressort le m\xeame nombre pour toute les lignes de la table , mais plut\xf4t l'utiliser pour calculer le pourcentage des ventes ",(0,r.kt)("strong",{parentName:"p"},"Sales %"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"ALL Sales Amount = \n\n    SUMX (\n\n            ALL (Sales),\n\n            Sales [Quantity] *  Sales [Net Price]\n\n        )\n\nSales % = [Sales Amount] / [ ALL Sales Amount ]\n")),(0,r.kt)("p",null,"Pour utiliser la fonction ALL sur une colonne d'une table, vous suivrez cette syntaxe: ",(0,r.kt)("strong",{parentName:"p"},"ALL ( 'Products' ","[ Color ]",")")),(0,r.kt)("h3",{id:"m\xe9lange-des-filtres"},"M\xe9lange des Filtres"),(0,r.kt)("p",null,"L'exemple ci dessous montrera le m\xe9lange entre SUMX, FILTER et ALL. Le filtre retournera uniquement les lignes o\xf9 le canal est \xe9gale \xe0 Internet de la table Orders, et SUMX effectue une it\xe9ration sur ces r\xe9sultats et calcule le montant des ventes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"Sales Amount Canal Internet =\n\n            SUMX(\n\n                        Filter ( \n\n                                    ALL  ( orders), \n\n                                    Orders [ Channel ] = '' Internet ''\n\n                                    ),\n\n                        Orders [ Quantity] * Orders [ Price ]                       \n\n                        )\n")),(0,r.kt)("h3",{id:"fonction-distinct"},"Fonction DISTINCT"),(0,r.kt)("p",null,"DISTINCT accepte une r\xe9f\xe9rence de colonne en tant que param\xe8tre et renvoie toutes les valeurs distinctes de cette colonne."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Product Sold = COUNTROWS ( DISTINCT ( Sales ","[ ProductKey ]"," ) )")),(0,r.kt)("p",null,"La diff\xe9rence entre ALL et DISTINCT est le fait que ALL ignore le filtre  et DISTINCT ob\xe9it au filtre que vous utilisez pour voir le r\xe9sultat de votre mesure."),(0,r.kt)("h3",{id:"fonction-relatedtable"},"Fonction RELATEDTABLE"),(0,r.kt)("p",null,"RELATEDTABLE est un fonction qui nous donne l'acc\xe8s \xe0 avoir tous les champs d'une autre table sur la table en cours, par exemple sur la table Product on veut avoir le nombre de ligne des ventes \xe0 partir de la table Sales."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Number of Sales = COUNTROWS ( RELATEDTABLED ( Sales ))")),(0,r.kt)("p",null,"Dans le cas  o\xf9 vous voulez calculer pour tout client le total vendu :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"Sales of Customer =\n\n                    SUMX ( \n                        RELATEDTABLE ( Sales ),\n                        Sales [ Quantity ] * Sales [ Price ]\n\n                        )\n")),(0,r.kt)("h2",{id:"calculate"},"CALCULATE"),(0,r.kt)("p",null,"CALCULATE est la fonction la plus importante de DAX, elle a le pouvoir de changer et de mettre \xe0 jour le contexte du filtre . Dans cette partie, vous d\xe9couvrirez les raisons de son importance et comment l'utiliser."),(0,r.kt)("p",null,"Dans cette exemple CALCULATE va calculer une expression dans un nouveau filtre contexte qui est modifi\xe9 par ce que vous fournissez comme filtre  apr\xe8s le deuxi\xe8me param\xe8tre . Donc toujours le premier param\xe8tre doit \xeatre une expression et tous les param\xe8tres restants sont des filtres qui sont appliqu\xe9 au contexte du filtre actuel."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"NumOfBigSales =\n\n        CALCULATE (\n            SUM ( Sales [ SalesAmount ]),\n            Sales [ SalesAmount ] > 100\n        )\n")),(0,r.kt)("p",null,"L'exemple ci dessus est l'\xe9quivalent de :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"NumOfBigSales =\n        CALCULATE (\n             SUM ( Sales [ SalesAmount ]),\n            FILTER (\n            ALL ( Sales [ SalesAmount ]),\n            Sales [ SalesAmount ] > 100\n            )\n    )\n")))}m.isMDXComponent=!0}}]);